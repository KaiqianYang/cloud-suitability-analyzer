{"ast":null,"code":"import _asyncToGenerator from \"/Users/bajajro/Documents/navigator-oss/cloud-suitability-analyzer/go/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ignoreFocus as s, focusable as t, focusElement as o } from \"../utils/focus.js\";\nimport { listenForAttributeChange as i } from \"../utils/events.js\";\nimport { getFlattenedDOMTree as c } from \"../utils/traversal.js\";\n\nfunction h(s = {\n  fallback: \"focusable\"\n}) {\n  return t => t.addInitializer(t => new e(t, s));\n}\n\nclass e {\n  constructor(s, t = {\n    fallback: \"focusable\"\n  }) {\n    this.host = s, this.config = t, this.host.addController(this);\n  }\n\n  hostConnected() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.host.updateComplete, _this.observer = i(_this.host, \"hidden\", () => _this.cdsFocusFirst()), _this.cdsFocusFirst();\n    })();\n  }\n\n  hostDisconnected() {\n    this.observer?.disconnect();\n  }\n\n  cdsFocusFirst() {\n    if (!s(this.host)) {\n      const s = this.host.shadowRoot ? this.host.shadowRoot : this.host,\n            i = s.querySelector(\".private-host\") ?? this.host,\n            h = c(s).filter(s => !s.hasAttribute(\"cds-focus-boundary\")),\n            e = h.find(s => s.hasAttribute(\"cds-first-focus\")),\n            r = \"focusable\" === this.config.fallback ? h.find(s => t(s) && !s.classList.contains(\"private-host\")) : null,\n            a = \"none\" === this.config.fallback ? null : i,\n            n = e ?? r ?? a;\n      n && o(n);\n    }\n  }\n\n}\n\nexport { e as FirstFocusController, h as firstFocus }; //# sourceMappingURL=first-focus.controller.js.map","map":null,"metadata":{},"sourceType":"module"}