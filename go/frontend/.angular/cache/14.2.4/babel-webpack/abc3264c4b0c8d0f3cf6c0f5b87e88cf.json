{"ast":null,"code":"import { __decorate as t } from \"tslib\";\nimport { LitElement as e, html as s } from \"lit\";\nimport { I18nService as a, setAttributes as r, syncDefinedProps as n, baseStyles as o, property as i, state as c, id as l, i18n as p, querySlot as d, querySlotAll as h, closable as u } from \"@cds/core/internal\";\nimport { ClarityIcons as g } from \"@cds/core/icon/icon.service.js\";\nimport { infoStandardIcon as y } from \"@cds/core/icon/shapes/info-standard.js\";\nimport { successStandardIcon as m } from \"@cds/core/icon/shapes/success-standard.js\";\nimport { warningStandardIcon as b } from \"@cds/core/icon/shapes/warning-standard.js\";\nimport { errorStandardIcon as f } from \"@cds/core/icon/shapes/error-standard.js\";\nimport { helpIcon as w } from \"@cds/core/icon/shapes/help.js\";\nimport $ from \"./alert.element.scss.js\";\n\nfunction v(t) {\n  const e = {\n    info: [g.getIconNameFromShape(y), a.keys.alert.info],\n    success: [g.getIconNameFromShape(m), a.keys.alert.success],\n    warning: [g.getIconNameFromShape(b), a.keys.alert.warning],\n    danger: [g.getIconNameFromShape(f), a.keys.alert.danger],\n    unknown: [g.getIconNameFromShape(w), a.keys.alert.info],\n    loading: [\"loading\", a.keys.alert.loading]\n  };\n  return e[t] ? e[t] : e.info;\n}\n\nfunction k(t) {\n  return [\"info\", \"success\", \"warning\", \"danger\", \"unknown\"].map(t => F(t)).indexOf(t) > -1;\n}\n\nfunction z(t) {\n  return v(t)[1];\n}\n\nfunction F(t) {\n  return v(t)[0];\n}\n\nfunction S(t, e, s) {\n  const a = \"align:stretch\";\n\n  switch (e) {\n    case \"light\":\n      return \"\";\n\n    case \"banner\":\n      switch (t) {\n        case \"wrapper\":\n        case \"actions\":\n          return s ? a : \"\";\n\n        case \"content\":\n          return \"align:shrink align:vertical-center\";\n\n        default:\n          return \"\";\n      }\n\n    default:\n      switch (t) {\n        case \"wrapper\":\n        case \"content\":\n          return a;\n\n        case \"actions\":\n          return \"align:shrink\";\n\n        default:\n          return \"\";\n      }\n\n  }\n}\n\nlet j = class extends e {\n  constructor() {\n    super();\n    this.size = \"default\", this.type = \"light\", this.closable = !1, this.status = \"neutral\", this.i18n = a.keys.alert, g.addIcons(y, f, m, b, w);\n  }\n\n  connectedCallback() {\n    super.connectedCallback(), r(this, [\"aria-describedby\", this.idForAriaDescriber], [\"role\", \"region\"]);\n  }\n\n  updated(t) {\n    super.updated(t), n(t, this, [this.alertActions]);\n  }\n\n  get parentGroupHasPager() {\n    return \"banner\" === this.type && !!this.parentElement.pager;\n  }\n\n  render() {\n    return s`<div class=\"private-host\" cds-layout=\"${\"banner\" === this.type ? \"horizontal wrap:none gap:xs align:vertical-center align:horizontal-center\" : \"horizontal wrap:none gap:xs\"}\">${\"banner\" !== this.type || this.parentGroupHasPager ? s`` : s`<span class=\"alert-spacer\" cds-layout=\"align:stretch\"> </span>`} <span class=\"alert-icon-wrapper\" cds-layout=\"horizontal\">${\"loading\" === this.status ? s`<cds-progress-circle class=\"alert-spinner\" status=\"info\" size=\"${\"banner\" === this.type ? \"20\" : \"18\"}\" aria-label=\"${z(this.status)}\" role=\"img\" cds-layout=\"align:horizontal-center\"></cds-progress-circle>` : s`<slot name=\"alert-icon\"><cds-icon class=\"alert-status-icon\" shape=\"${F(this.status)}\" role=\"img\" aria-label=\"${z(this.status)}\" cds-layout=\"align:horizontal-center\"></cds-icon></slot>`} </span><span class=\"alert-content-wrapper\" cds-layout=\"horizontal wrap:none ${S(\"wrapper\", this.type, this.parentGroupHasPager)}\"><span id=\"${this.idForAriaDescriber}\" role=\"status\" class=\"alert-content\" cds-layout=\"${S(\"content\", this.type, this.parentGroupHasPager)}\"><slot></slot>${\"light\" === this.type ? s`<slot name=\"actions\"></slot>` : s``} </span>${\"light\" === this.type ? s`` : s`<span class=\"alert-actions-wrapper\" cds-layout=\"${this.alertActions ? \"p-l:md\" : \"\"} ${S(\"actions\", this.type, this.parentGroupHasPager)}\"><slot name=\"actions\"></slot></span>`} </span>${\"banner\" !== this.type || this.parentGroupHasPager ? s`` : s`<span class=\"alert-spacer\" cds-layout=\"align:stretch\"> </span>`} ${\"light\" !== this.type && this.closable ? s`<span class=\"alert-close-wrapper\"><slot name=\"close-button\"><cds-internal-close-button icon-size=\"${\"banner\" === this.type ? \"20\" : \"16\"}\" @click=\"${() => this.closableController.close(!0)}\" aria-label=\"${this.i18n.closeButtonAriaLabel}\"></cds-internal-close-button></slot></span>` : s``}</div>`;\n  }\n\n  static get styles() {\n    return [o, $];\n  }\n\n};\nt([i({\n  type: String\n})], j.prototype, \"size\", void 0), t([c({\n  type: String,\n  reflect: !0\n})], j.prototype, \"type\", void 0), t([l()], j.prototype, \"idForAriaDescriber\", void 0), t([i({\n  type: Boolean\n})], j.prototype, \"closable\", void 0), t([i({\n  type: String\n})], j.prototype, \"status\", void 0), t([p()], j.prototype, \"i18n\", void 0), t([d(\"cds-alert-actions\")], j.prototype, \"alertActions\", void 0), t([h(\"cds-icon\", {\n  assign: \"alert-icon\"\n})], j.prototype, \"alertIcons\", void 0), t([d(\"cds-internal-close-button\", {\n  assign: \"close-button\"\n})], j.prototype, \"closeButton\", void 0), j = t([u({\n  escape: !1\n})], j);\nexport { j as CdsAlert, S as getAlertContentLayout, z as getIconStatusLabel, F as getIconStatusShape, v as getIconStatusTuple, k as iconShapeIsAlertStatusType }; //# sourceMappingURL=alert.element.js.map","map":null,"metadata":{},"sourceType":"module"}