{"ast":null,"code":"import { __decorate as t } from \"tslib\";\nimport { html as e } from \"lit\";\nimport { I18nService as i, i18n as s, state as o } from \"@cds/core/internal\";\nimport { CdsControl as n } from \"@cds/core/forms\";\nimport r from \"./file.element.scss.js\";\n\nclass l extends n {\n  constructor() {\n    super(...arguments);\n    this.i18n = i.keys.file, this.buttonLabel = this.i18n.browse, this.fixedControlWidth = !0, this.supportsPrefixSuffixActions = !1;\n  }\n\n  static get styles() {\n    return [...super.styles, r];\n  }\n\n  get inputTemplate() {\n    return e`<div cds-layout=\"horizontal gap:sm align:vertical-center\"><cds-button size=\"sm\" action=\"outline\" @click=\"${() => this.label.click()}\" ?disabled=\"${this.disabled}\"><cds-icon shape=\"folder\" aria-hidden=\"true\"></cds-icon><span>${this.buttonLabel}</span></cds-button>${this.clearFilesControlTemplate}</div>`;\n  }\n\n  get clearFilesControlTemplate() {\n    return this.inputControl.files?.length && !this.disabled ? e`<cds-button-action shape=\"times\" @click=\"${() => this.clearFiles()}\" aria-label=\"${this.i18n.removeFile}\"></cds-button-action>` : e``;\n  }\n\n  firstUpdated(t) {\n    super.firstUpdated(t), this.inputControl.addEventListener(\"change\", t => {\n      t.isTrusted && this.updateLabelAndFocus(t.target.files);\n    });\n  }\n\n  clearFiles(t = !0) {\n    this.buttonLabel = this.i18n.browse, this.inputControl.value = \"\", t && this.inputControl.dispatchEvent && this.inputControl.dispatchEvent(new Event(\"change\"));\n    const e = this.shadowRoot?.querySelector(\"cds-button\");\n    e && e.focus();\n  }\n\n  updateLabelAndFocus(t) {\n    t && t.length ? this.buttonLabel = t.length > 1 ? `${t.length} ${this.i18n.files}` : t[0].name : this.clearFiles(!1);\n  }\n\n}\n\nt([s()], l.prototype, \"i18n\", void 0), t([o()], l.prototype, \"buttonLabel\", void 0), t([o()], l.prototype, \"fixedControlWidth\", void 0), t([o()], l.prototype, \"supportsPrefixSuffixActions\", void 0);\nexport { l as CdsFile }; //# sourceMappingURL=file.element.js.map","map":null,"metadata":{},"sourceType":"module"}