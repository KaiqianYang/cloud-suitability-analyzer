{"ast":null,"code":"import { UriConstants } from 'src/app/constants/uri-constants';\nimport { TagRequest, TagRequests } from '../model/tagrequest';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApplicationSummaryService = /*#__PURE__*/(() => {\n  class ApplicationSummaryService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getApplicationByRun(runid) {\n      const url = UriConstants.RUNS_URI + runid + '/summary/application_scores?rangeMin=1&rangeMax=10&reverse=false';\n      return this.http.get(url);\n    }\n\n    getLanguagesByApplicationRun(runid, appName) {\n      const url = UriConstants.RUNS_URI + runid + '/apps/' + appName + '/languages';\n      return this.http.get(url);\n    }\n\n    getApisByApplicationRun(runid, appName) {\n      const url = UriConstants.RUNS_URI + runid + '/apps/' + appName + '/apis';\n      return this.http.get(url);\n    }\n\n    getApplicationAllFindings(runid, appName) {\n      const url = UriConstants.RUNS_URI + runid + '/apps/' + appName + '/findings/scorecard/low,medium,high?includeFF=false';\n      return this.http.post(url, \"\");\n    }\n\n    getApplicationFindingsByTag(runid, appName, tag) {\n      const url = UriConstants.RUNS_URI + runid + '/apps/' + appName + '/findings/scorecard/low,medium,high?includeFF=false';\n      let tagReq = new TagRequest(tag.Value, true);\n      let tagsReq = [];\n      tagsReq.push(tagReq);\n      let tagsRequest = new TagRequests(tagsReq);\n      return this.http.post(url, tagsRequest);\n    }\n\n    getApplicationFindingsByTags(runid, appName, bin) {\n      const url = UriConstants.RUNS_URI + runid + '/apps/' + appName + '/findings/scorecard/low,medium,high?includeFF=false';\n      let tagsReq = [];\n      bin.tags.forEach(tag => {\n        let tagReq = new TagRequest(tag.name, true);\n        tagsReq.push(tagReq);\n      });\n      let tagsRequest = new TagRequests(tagsReq);\n      return this.http.post(url, tagsRequest);\n    }\n\n    getApplicationScorecard(runid, appName) {\n      const url = UriConstants.RUNS_URI + runid + '/apps/' + appName + '/scorecard?includeFF=false';\n      return this.http.post(url, \"\");\n    }\n\n  }\n\n  ApplicationSummaryService.ɵfac = function ApplicationSummaryService_Factory(t) {\n    return new (t || ApplicationSummaryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApplicationSummaryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApplicationSummaryService,\n    factory: ApplicationSummaryService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApplicationSummaryService;\n})();","map":null,"metadata":{},"sourceType":"module"}