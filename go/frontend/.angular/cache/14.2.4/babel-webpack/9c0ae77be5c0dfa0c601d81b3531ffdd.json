{"ast":null,"code":"import _asyncToGenerator from \"/Users/bajajro/Documents/navigator-oss/cloud-suitability-analyzer/go/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate as t } from \"tslib\";\nimport { LitElement as o, html as s } from \"lit\";\nimport { baseStyles as e, elementVisible as r, syncDefinedProps as i, childrenUpdateComplete as l, elementResize as a, pxToRem as n, property as p, querySlotAll as d } from \"@cds/core/internal\";\nimport { defaultFormLayout as h, getLargestPrimaryLabelWidth as c, isVerticalLayout as u } from \"../utils/utils.js\";\nimport y from \"./form-group.element.scss.js\";\n\nclass m extends o {\n  constructor() {\n    super(...arguments);\n    this.layout = h, this.responsive = !0, this.validate = !1, this.observers = [];\n  }\n\n  get controlsAndGroups() {\n    return [...Array.from(this.groups), ...Array.from(this.controls)];\n  }\n\n  static get styles() {\n    return [e, y];\n  }\n\n  render() {\n    return s`<div class=\"private-host\" cds-layout=\"vertical gap:${\"compact\" === this.layout ? \"sm\" : \"lg\"}\"><slot></slot></div>`;\n  }\n\n  firstUpdated(t) {\n    super.firstUpdated(t), this.syncLayouts(), this.setControlLabelWidths(), this.observers.push(r(this, () => this.setControlLabelWidths()));\n  }\n\n  updated(t) {\n    super.updated(t), i(t, this, this.controlsAndGroups);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback(), this.observers.forEach(t => t?.disconnect());\n  }\n\n  setControlLabelWidths() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      \"horizontal\" !== _this.layout && \"horizontal-inline\" !== _this.layout && \"compact\" !== _this.layout || (yield l(_this.controlsAndGroups), _this.style.setProperty(\"--internal-label-min-width\", yield c(_this.controlsAndGroups)), a(_this, () => _this.style.setProperty(\"--internal-label-max-width\", n(_this.getBoundingClientRect().width))));\n    })();\n  }\n\n  syncLayouts() {\n    this.addEventListener(\"layoutChange\", t => {\n      t.preventDefault(), !this.overflowElement && u(t.detail) && this.collapseForm(t.target), t.target !== this.overflowElement || u(t.detail) || this.expandForm(t.detail);\n    });\n  }\n\n  collapseForm(t) {\n    this.overflowElement = t, this.responsive = !1, this.layout = \"vertical\", t.updateComplete.then(() => t.responsive = !0);\n  }\n\n  expandForm(t) {\n    this.responsive = !0, this.overflowElement = null, this.layout = t;\n  }\n\n}\n\nt([p({\n  type: String\n})], m.prototype, \"layout\", void 0), t([p({\n  type: String\n})], m.prototype, \"controlWidth\", void 0), t([p({\n  type: Boolean\n})], m.prototype, \"responsive\", void 0), t([p({\n  type: Boolean\n})], m.prototype, \"validate\", void 0), t([d(\"[cds-control]\")], m.prototype, \"controls\", void 0), t([d(\"[cds-control-group]\")], m.prototype, \"groups\", void 0);\nexport { m as CdsFormGroup }; //# sourceMappingURL=form-group.element.js.map","map":null,"metadata":{},"sourceType":"module"}