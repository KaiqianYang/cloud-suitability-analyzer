{"ast":null,"code":"import _asyncToGenerator from \"/Users/bajajro/Documents/navigator-oss/cloud-suitability-analyzer/go/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { isSafari as o, isWindows as i } from \"../utils/browser.js\";\nimport { onChildListMutation as t } from \"../utils/events.js\";\nimport { getFlattenedFocusableItems as r } from \"../utils/traversal.js\";\n\nfunction e(o = {\n  update: \"slot\"\n}) {\n  return i => {\n    i.addInitializer(i => {\n      i.ariaGridController || (i.ariaGridController = new s(i, o));\n    });\n  };\n}\n\nclass s {\n  constructor(o, i = {\n    update: \"slot\"\n  }) {\n    this.host = o, this.config = i, this.observers = [], o.addController(this);\n  }\n\n  hostConnected() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.host.updateComplete, _this.intializeColumnSort(), _this.update(), \"slot\" === _this.config.update ? _this.host.shadowRoot.addEventListener(\"slotchange\", () => _this.host.updateComplete.then(() => _this.update())) : _this.observers.push(t(_this.host, () => _this.host.updateComplete.then(() => _this.update())));\n    })();\n  }\n\n  hostDisconnected() {\n    this.observers.forEach(o => o?.disconnect());\n  }\n\n  update() {\n    this.grid = {\n      grid: this.host.grid ? this.host.grid : this.host,\n      columnRowGroup: this.host.columnRowGroup,\n      columnRow: this.host.columnRow,\n      columns: this.host.columns,\n      rowGroup: this.host.rowGroup,\n      rows: this.host.rows,\n      cells: this.host.cells,\n      footerRowGroup: this.host.footerRowGroup,\n      footerRow: this.host.footerRow,\n      footerCells: this.host.footerCells,\n      placeholderCell: this.host.placeholderCell\n    }, this.initializeGrid(), this.intializeColumns(), this.initializeRows(), this.initializeCells(), this.initializePlaceholder(), this.intializeFooter();\n  }\n\n  intializeColumnSort() {\n    this.host.addEventListener(\"sortChange\", o => {\n      const i = o.composedPath().find(o => \"columnheader\" === o.role);\n      i && (i.ariaSort = o.detail);\n    });\n  }\n\n  initializeGrid() {\n    const o = Math.max(this.grid.rows?.length, 1),\n          i = this.grid.footerRow ? 1 : 0;\n    this.grid.grid.role = \"grid\", this.grid.grid.ariaRowCount = \"\" + (1 + o + i), this.grid.grid.ariaColCount = \"\" + this.grid.columns.length;\n  }\n\n  intializeColumns() {\n    this.grid.columnRowGroup.role = \"rowgroup\", this.grid.columnRow.role = \"row\", this.grid.columnRow.ariaRowIndex = \"1\", this.grid.columns.forEach((o, i) => {\n      o.role = \"columnheader\", o.ariaColIndex = \"\" + (i + 1), o.ariaSort = \"none\", this.patchInvalidScreenReaderBehavior(o);\n    });\n  }\n\n  initializeRows() {\n    this.grid.rows?.forEach((o, i) => {\n      o.role = \"row\", o.ariaRowIndex = \"\" + (i + 2);\n    });\n  }\n\n  initializeCells() {\n    const o = this.grid.columns.length;\n    this.grid.cells?.forEach((i, t) => {\n      i.role || (i.role = \"gridcell\"), i.ariaColIndex = \"\" + (t % o + 1);\n    });\n  }\n\n  initializePlaceholder() {\n    this.grid.placeholderCell && (this.grid.placeholderCell.ariaColSpan = this.grid.grid.ariaColCount);\n  }\n\n  intializeFooter() {\n    this.grid.footerRowGroup && this.grid.footerRow && (this.grid.footerRowGroup.role = \"rowgroup\", this.grid.footerRow.role = \"row\", this.grid.footerRow.ariaRowIndex = \"\" + (this.grid.rows.length + 2), this.grid.footerCells?.forEach(o => o.role = \"gridcell\"), 1 === this.grid.footerCells?.length && (this.grid.footerCells[0].ariaColSpan = this.grid.grid.ariaColCount));\n  }\n\n  patchInvalidScreenReaderBehavior(t) {\n    if (o() || i()) {\n      const o = r(t).filter(o => !o.readonly),\n            i = t.ariaLabel ? t.ariaLabel : t?.textContent?.trim();\n      (o.length || t.resizable) && i.length && (t.ariaLabel = i, t.setAttribute(\"scope\", \"col\"));\n    }\n  }\n\n}\n\nexport { s as AriaGridController, e as ariaGrid }; //# sourceMappingURL=aria-grid.controller.js.map","map":null,"metadata":{},"sourceType":"module"}