{"ast":null,"code":"import t from \"ramda/es/includes.js\";\nimport e from \"ramda/es/without.js\";\nimport { getCssPropertyValue as n } from \"./css.js\";\nimport { transformSpacedStringToArray as r, pluckPixelValue as o } from \"./string.js\";\nimport { isStringAndNotNilOrEmpty as i, isNumericString as u } from \"./identity.js\";\n\nfunction c(t) {\n  switch (t.tagName.toLowerCase()) {\n    case \"input\":\n      return \"hidden\" !== t.getAttribute(\"type\") && !t.hasAttribute(\"disabled\") && !t.hasAttribute(\"readonly\");\n\n    case \"button\":\n    case \"select\":\n    case \"textarea\":\n      return !t.hasAttribute(\"disabled\");\n\n    case \"iframe\":\n    case \"embed\":\n    case \"object\":\n      return !0;\n\n    case \"a\":\n    case \"area\":\n      return t.hasAttribute(\"href\");\n\n    case \"audio\":\n    case \"video\":\n      return t.hasAttribute(\"controls\");\n\n    default:\n      return t.hasAttribute(\"tabindex\") || \"true\" === t.getAttribute(\"contenteditable\") || \"button\" === t.getAttribute(\"role\") && !t.hasAttribute(\"disabled\");\n  }\n}\n\nfunction a(t) {\n  if (!t) return !1;\n  const e = t.getBoundingClientRect();\n  return e.top < 0 || t.scrollHeight > t.offsetHeight || e.left < 0 || t.scrollWidth > t.clientWidth;\n}\n\nfunction s(t) {\n  return t.querySelectorAll(f.join(\", \"));\n}\n\nconst d = [\"a[href]\", \"area[href]\", \"audio[controls]\", \"button:not([disabled])\", 'input:not([type=\"hidden\"]):not([disabled]):not([readonly])', \"iframe\", \"object\", \"embed\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"video[controls]\", \"*[contenteditable=true]\", \"[role=button]:not([disabled])\"],\n      l = [\"*[tabindex]\", ...d],\n      f = ['*[tabindex]:not([tabindex=\"-1\"])', ...d];\n\nfunction b(t, e = \"px\") {\n  return t && t.getBoundingClientRect ? t.getBoundingClientRect().width + e : \"\";\n}\n\nfunction h(t, e) {\n  return e ? \"\" : b(t);\n}\n\nfunction m(t) {\n  return !!t && t instanceof HTMLElement;\n}\n\nfunction A(t, e) {\n  return !!t && t.hasAttribute(e) && i(t.getAttribute(e));\n}\n\nfunction g(t, e, n) {\n  const [r, o] = e;\n  n() ? p(t, [r, o]) : y(t, r);\n}\n\nfunction p(t, ...e) {\n  t && e.forEach(([e, n]) => {\n    !1 === n || null === n ? t.removeAttribute(e) : t.setAttribute(e, n + \"\");\n  });\n}\n\nfunction y(t, ...e) {\n  t && e.forEach(e => {\n    t.removeAttribute(e);\n  });\n}\n\nfunction x(e, n, r) {\n  if (e) {\n    const o = e.getAttribute(n);\n    o ? t(r, o.split(\" \")) || e.setAttribute(n, o + \" \" + r) : e.setAttribute(n, r);\n  }\n}\n\nfunction w(t, n, o) {\n  if (t) {\n    const i = t.getAttribute(n);\n\n    if (i) {\n      const u = e([o], r(i)).join(\" \");\n      u ? t.setAttribute(n, u) : t.removeAttribute(n);\n    }\n  }\n}\n\nfunction j(...t) {\n  t.forEach(t => {\n    const [e, n] = t;\n    e && p(e, [\"slot\", n]);\n  });\n}\n\nfunction E(t) {\n  return !!t && t?.offsetHeight > 0 && !1 === t?.hasAttribute(\"hidden\");\n}\n\nfunction C(t) {\n  Array.from(t).filter(t => t.textContent && t.textContent.trim().length > 0 && 3 === t.nodeType && t.parentElement).forEach(t => {\n    const e = document.createElement(\"span\");\n    t.after(e), e.appendChild(t);\n  });\n}\n\nfunction R(t, e) {\n  return e && (t.querySelector(e) || t?.shadowRoot?.querySelector(e)) || null;\n}\n\nfunction H(t) {\n  return document.createRange().createContextualFragment(t);\n}\n\nfunction q(t = window) {\n  const e = t?.document,\n        n = t?.innerHeight || e?.documentElement?.clientHeight || 0;\n  return {\n    width: t?.innerWidth || e?.documentElement?.clientWidth || 0,\n    height: n\n  };\n}\n\nfunction v(t) {\n  const e = t || n(\"--cds-global-layout-width-xs\").trim();\n  return !!t?.endsWith(\"px\") && o(e) >= q().width;\n}\n\nfunction S(t, e) {\n  const n = e || t;\n  return t.shadowRoot ? t.shadowRoot : n;\n}\n\nfunction W(t) {\n  return u(t) ? \"number\" : t.match(/^\\d{4}-\\d{1,2}-\\d{1,2}$/) ? \"date\" : \"text\";\n}\n\nfunction B(t, e) {\n  const n = t.querySelectorAll(e),\n        r = t.shadowRoot?.querySelectorAll(e);\n  return [...Array.from(n), ...Array.from(r)];\n}\n\nfunction K(t) {\n  return 2 === t.buttons && !t.ctrlKey || 1 === t.buttons && t.ctrlKey;\n}\n\nfunction L(t) {\n  return null != t && \"\" + t != \"false\";\n}\n\nexport { x as addAttributeValue, j as assignSlotNames, L as coerceBooleanProperty, K as contextMenuClick, H as createFragment, l as focusableSelectors, b as getElementWidth, h as getElementWidthUnless, W as getInputValueType, S as getShadowRootOrElse, q as getWindowDimensions, A as hasAttributeAndIsNotEmpty, c as isFocusable, m as isHTMLElement, a as isScrollable, E as isVisible, s as queryAllFocusable, R as queryChildFromLightOrShadowDom, B as querySelectorRoots, w as removeAttributeValue, y as removeAttributes, p as setAttributes, g as setOrRemoveAttribute, C as spanWrapper, f as tabFlowSelectors, v as windowIsAboveMobileBreakpoint }; //# sourceMappingURL=dom.js.map","map":null,"metadata":{},"sourceType":"module"}