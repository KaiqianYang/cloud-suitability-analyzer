{"ast":null,"code":"import _asyncToGenerator from \"/Users/bajajro/Documents/navigator-oss/cloud-suitability-analyzer/go/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { html as t } from \"lit\";\nimport { getFlattenedFocusableItems as s } from \"../utils/traversal.js\";\nimport { renderBefore as o, renderAfter as i } from \"../utils/lit.js\";\nimport { ignoreFocus as r } from \"../utils/focus.js\";\n\nfunction h() {\n  return t => t.addInitializer(t => new e(t));\n}\n\nclass e {\n  constructor(t) {\n    this.host = t, this.host.addController(this);\n  }\n\n  get focusableItems() {\n    return s(this.root).filter(t => !t.hasAttribute(\"cds-focus-boundary\") && (this.root.contains(t) || t.closest(\"[cds-focus-trap]\") === this.host));\n  }\n\n  get root() {\n    return this.host.shadowRoot ? this.host.shadowRoot : this.host;\n  }\n\n  get styles() {\n    return t`<style cds-focus-style>:host(:focus-within) [cds-focus-boundary],:host(:host:focus-within) [cds-focus-boundary]{display:block!important}</style>`;\n  }\n\n  boundary(s) {\n    return t`<div @focusin=\"${() => this.focusableItems.at(s)?.focus()}\" test=\"${s}\" cds-focus-boundary tabindex=\"0\" style=\"display:none;position:absolute;width:1px;height:1px;clip:rect(0,0,0,0)\">boundary</div>`;\n  }\n\n  hostConnected() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.host.updateComplete, r(_this.host) || (o(_this.styles, _this.root), o(_this.boundary(-1), _this.root), i(_this.boundary(0), _this.root), _this.host.setAttribute(\"cds-focus-trap\", \"\"));\n    })();\n  }\n\n}\n\nexport { e as InlineFocusTrapController, h as focusTrap }; //# sourceMappingURL=inline-focus-trap.controller.js.map","map":null,"metadata":{},"sourceType":"module"}