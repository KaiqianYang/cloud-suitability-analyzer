{"ast":null,"code":"import { __decorate as s } from \"tslib\";\nimport { html as o } from \"lit\";\nimport { I18nService as t, state as i, i18n as r } from \"@cds/core/internal\";\nimport { CdsControl as e } from \"@cds/core/forms\";\nimport { inputStyles as c } from \"@cds/core/input\";\nimport { ClarityIcons as d } from \"@cds/core/icon/icon.service.js\";\nimport { eyeIcon as a } from \"@cds/core/icon/shapes/eye.js\";\nimport { eyeHideIcon as h } from \"@cds/core/icon/shapes/eye-hide.js\";\n\nclass n extends e {\n  constructor() {\n    super();\n    this.showPassword = !1, this.i18n = t.keys.password, d.addIcons(a, h);\n  }\n\n  get suffixDefaultTemplate() {\n    return o`<cds-button-action @click=\"${() => this.togglePasswordVisibility()}\" .pressed=\"${this.showPassword}\" .ariaLabel=\"${this.showPassword ? this.i18n.hideButtonAriaLabel : this.i18n.showButtonAriaLabel}\"><cds-icon shape=\"${this.showPassword ? \"eye-hide\" : \"eye\"}\"></cds-icon></cds-button-action>`;\n  }\n\n  static get styles() {\n    return [...super.styles, c];\n  }\n\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword, this.inputControl.type = this.showPassword ? \"text\" : \"password\", this.inputControl.focus();\n  }\n\n}\n\ns([i()], n.prototype, \"showPassword\", void 0), s([r()], n.prototype, \"i18n\", void 0);\nexport { n as CdsPassword }; //# sourceMappingURL=password.element.js.map","map":null,"metadata":{},"sourceType":"module"}