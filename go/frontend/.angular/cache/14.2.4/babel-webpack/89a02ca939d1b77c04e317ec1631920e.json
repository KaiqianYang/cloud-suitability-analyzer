{"ast":null,"code":"import _asyncToGenerator from \"/Users/bajajro/Documents/navigator-oss/cloud-suitability-analyzer/go/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { html as t } from \"lit\";\nimport { createId as n, pxToRem as i } from \"@cds/core/internal\";\nconst e = [\"vertical\", \"vertical-inline\", \"horizontal\", \"horizontal-inline\", \"compact\"],\n      o = \"horizontal\",\n      r = \"stretch\";\n\nfunction c(t, n) {\n  t && n && (l(t), n.setAttribute(\"for\", t.id));\n}\n\nfunction a(t, n) {\n  n && (l(t), n.id = t.id + \"-datalist\", t.setAttribute(\"list\", n.id));\n}\n\nfunction l(t) {\n  t.id.length || (t.id = n());\n}\n\nconst s = {\n  \"horizontal-inline\": \"horizontal\",\n  \"vertical-inline\": \"vertical\",\n  horizontal: \"horizontal\",\n  vertical: \"vertical\",\n  compact: \"compact\"\n};\n\nfunction u(n) {\n  return t`${\"neutral\" !== n ? t`<cds-button-action readonly=\"readonly\" class=\"status\" cds-layout=\"align:shrink\"><cds-icon status=\"${\"error\" === n ? \"danger\" : \"success\"}\" shape=\"${\"error\" === n ? \"exclamation-circle\" : \"check-circle\"}\" size=\"16\" inner-offset=\"${4}\"></cds-icon></cds-button-action>` : \"\"}`;\n}\n\nfunction d(_x) {\n  return _d.apply(this, arguments);\n}\n\nfunction _d() {\n  _d = _asyncToGenerator(function* (t) {\n    return Promise.all(t.map(t => t.updateComplete)).then(() => {\n      const n = t.filter(t => \"primary\" === t.controlLabel?.action);\n      return i(Math.max(...n.map(t => t.controlLabel.getBoundingClientRect().width)));\n    });\n  });\n  return _d.apply(this, arguments);\n}\n\nfunction h(t, n, i) {\n  return \"vertical\" !== i && \"vertical-inline\" !== i && t.getBoundingClientRect().top > n?.getBoundingClientRect().top + 12;\n}\n\nfunction p(t, n) {\n  const i = t[0],\n        e = t[t.length - 1];\n  return (\"vertical-inline\" === n || \"horizontal-inline\" === n) && e.getBoundingClientRect().top > i.getBoundingClientRect().top;\n}\n\nfunction f(t) {\n  return \"vertical\" === t || \"vertical-inline\" === t;\n}\n\nfunction m(_x2) {\n  return _m.apply(this, arguments);\n}\n\nfunction _m() {\n  _m = _asyncToGenerator(function* (t) {\n    const n = t.find(t => \"neutral\" !== t.status);\n    return yield n?.updateComplete, n && !n.hidden ? n.status : \"neutral\";\n  });\n  return _m.apply(this, arguments);\n}\n\nexport { l as assignInputId, c as associateInputAndLabel, a as associateInputToDatalist, h as controlIsWrapped, r as defaultControlWidth, o as defaultFormLayout, e as formLayouts, m as getCurrentMessageStatus, d as getLargestPrimaryLabelWidth, u as getStatusIcon, p as inlineControlListIsWrapped, f as isVerticalLayout, s as layoutGroupToControlMapper }; //# sourceMappingURL=utils.js.map","map":null,"metadata":{},"sourceType":"module"}